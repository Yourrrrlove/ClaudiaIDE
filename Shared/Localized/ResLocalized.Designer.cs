//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClaudiaIDE.Localized {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ResLocalized {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResLocalized() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClaudiaIDE.Localized.ResLocalized", typeof(ResLocalized).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   ClaudiaIDE に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _110 {
            get {
                return ResourceManager.GetString("110", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This extension change the background image of editor. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _112 {
            get {
                return ResourceManager.GetString("112", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _116 {
            get {
                return ResourceManager.GetString("116", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _117 {
            get {
                return ResourceManager.GetString("117", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _118 {
            get {
                return ResourceManager.GetString("118", resourceCulture);
            }
        }
        
        /// <summary>
        ///   API Endpoint に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ApiEndpoint {
            get {
                return ResourceManager.GetString("ApiEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The API Endpoint should point to a location that gives an ImagePath as JsonObject {jsonKey: UrlPointingToUrl} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ApiEndpointDescpripion {
            get {
                return ResourceManager.GetString("ApiEndpointDescpripion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image background type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundType {
            get {
                return ResourceManager.GetString("BackgroundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Types of background image. Single: Displays the specified image. SlideShow: will the image of the specified folder to display slideshow. SingleEach: Displays one different image in the specified folder per opened tab. SingleWeb: Displays the image of the specified URL. WebApi: Displays a slideshow using the image URLs contained in the specified API response. Call Web API for each switch. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackgroundTypeDes {
            get {
                return ResourceManager.GetString("BackgroundTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blur method に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlurMethod {
            get {
                return ResourceManager.GetString("BlurMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blur method. If &quot;Blur radius&quot; property is greater than zero, the image blur using this method. Gaussian: Translucent Blur, Box: Linear Blur. Hardware acceleration is recommended. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlurMethodDes {
            get {
                return ResourceManager.GetString("BlurMethodDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blur radius に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlurRadius {
            get {
                return ResourceManager.GetString("BlurRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply blurring on background graphics. If this value is set to zero, no blur. (value within the range of 0 &lt;= {image the smaller of x and y size / 2 - 1} ). GIFs and videos may give reduced performance if value is set too high. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlurRadiusDes {
            get {
                return ResourceManager.GetString("BlurRadiusDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Directory Path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DirectoryPathType {
            get {
                return ResourceManager.GetString("DirectoryPathType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background image directory path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DirectoryPathTypeDes {
            get {
                return ResourceManager.GetString("DirectoryPathTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Editor background color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorBackgroundColorType {
            get {
                return ResourceManager.GetString("EditorBackgroundColorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies the background color of the editor part. This value requires an HTML color code in alpha format. For example, &quot;#B0A6ACAF&quot;. If it is an empty string, ClaudiaIDE will not explicitly set the background color. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorBackgroundColorTypeDes {
            get {
                return ResourceManager.GetString("EditorBackgroundColorTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expand to IDE に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExpandToIDEType {
            get {
                return ResourceManager.GetString("ExpandToIDEType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If true, background image expand to IDE. If false, background image set to text editor background. (false is default value) You may need to reopen the editor window for the settings to take effect. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ExpandToIDETypeDes {
            get {
                return ResourceManager.GetString("ExpandToIDETypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File Path に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilePathType {
            get {
                return ResourceManager.GetString("FilePathType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Backgroud image file path. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilePathTypeDes {
            get {
                return ResourceManager.GetString("FilePathTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Horizontal Alignment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignmentType {
            get {
                return ResourceManager.GetString("HorizontalAlignmentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image position in horizon. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HorizontalAlignmentTypeDes {
            get {
                return ResourceManager.GetString("HorizontalAlignmentTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Image {
            get {
                return ResourceManager.GetString("Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image animation interval に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageAnimationIntervalType {
            get {
                return ResourceManager.GetString("ImageAnimationIntervalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background image fade animation interval. (value in format: HH:mm:ss) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageAnimationIntervalTypeDes {
            get {
                return ResourceManager.GetString("ImageAnimationIntervalTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image extensions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageExtensionsType {
            get {
                return ResourceManager.GetString("ImageExtensionsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only images with this extensions will be shown. (Comma separated) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageExtensionsTypeDes {
            get {
                return ResourceManager.GetString("ImageExtensionsTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image Stretch に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStretchType {
            get {
                return ResourceManager.GetString("ImageStretchType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A value that specifies how the content of this image stretches to fit the editor. The Image Stretch property accepts the following values: None, Uniform, UniformToFill, Fill に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ImageStretchTypeDes {
            get {
                return ResourceManager.GetString("ImageStretchTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include Subdirectories に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IncludeSubdirectoriesType {
            get {
                return ResourceManager.GetString("IncludeSubdirectoriesType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies whether images within subdirectories will be included. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IncludeSubdirectoriesTypeDes {
            get {
                return ResourceManager.GetString("IncludeSubdirectoriesTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background image limit to only editor window に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsLimitToMainlyEditorWindow {
            get {
                return ResourceManager.GetString("IsLimitToMainlyEditorWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If this option is True, background image is limited only to code editor window. If this option is False, different kinds of controls with code will have background image as well. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsLimitToMainlyEditorWindowDes {
            get {
                return ResourceManager.GetString("IsLimitToMainlyEditorWindowDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Is transparent to content margin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsTransparentToContentMarginType {
            get {
                return ResourceManager.GetString("IsTransparentToContentMarginType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If this option is true, Content margin can show background image. This mean is change default background to transparent. * Content margin is navigation bar, horizontal and vertical scroll bar, e.t.c.. You may need to reopen the editor window for the settings to take effect. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsTransparentToContentMarginTypeDes {
            get {
                return ResourceManager.GetString("IsTransparentToContentMarginTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Is transparent to sticky scroll に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsTransparentToStickyScrollType {
            get {
                return ResourceManager.GetString("IsTransparentToStickyScrollType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If this option is true, Sticky scroll can show background image. This mean is change default background to transparent. You may need to reopen the editor window for the settings to take effect. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string IsTransparentToStickyScrollTypeDes {
            get {
                return ResourceManager.GetString("IsTransparentToStickyScrollTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   JSON-Key に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JsonKey {
            get {
                return ResourceManager.GetString("JsonKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The key which holds the value to the downloadpath come common examples are &quot;url&quot;, &quot;src&quot;, &quot;img&quot;, &quot;image&quot;. Or ClaudiaIDE can parse JSONPath as follows: &quot;$.images[0].url&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JsonKeyDescription {
            get {
                return ResourceManager.GetString("JsonKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Layout に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Layout {
            get {
                return ResourceManager.GetString("Layout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopSlideshowType {
            get {
                return ResourceManager.GetString("LoopSlideshowType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This will cause the slideshow to loop back to the beginning after the last image has been shown. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopSlideshowTypeDes {
            get {
                return ResourceManager.GetString("LoopSlideshowTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Max Height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MaxHeightType {
            get {
                return ResourceManager.GetString("MaxHeightType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum height in pixels that the image can fill in the view. Applies only if the image stretch property is None. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MaxHeightTypeDes {
            get {
                return ResourceManager.GetString("MaxHeightTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Max Width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MaxWidthType {
            get {
                return ResourceManager.GetString("MaxWidthType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Maximum width in pixels that the image can fill in the view. Applies only if the image stretch property is None. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MaxWidthTypeDes {
            get {
                return ResourceManager.GetString("MaxWidthTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Opacity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpacityType {
            get {
                return ResourceManager.GetString("OpacityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background image opacity. (value within the range of 0.00 &lt;= 1.00) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpacityTypeDes {
            get {
                return ResourceManager.GetString("OpacityTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scope に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Scope {
            get {
                return ResourceManager.GetString("Scope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shuffle Slideshow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShuffleSlideshowType {
            get {
                return ResourceManager.GetString("ShuffleSlideshowType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Randomize the slideshow order. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ShuffleSlideshowTypeDes {
            get {
                return ResourceManager.GetString("ShuffleSlideshowTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SingleEach に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SingleEach {
            get {
                return ResourceManager.GetString("SingleEach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SingleImage に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SingleImage {
            get {
                return ResourceManager.GetString("SingleImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SlideShow に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Slideshow {
            get {
                return ResourceManager.GetString("Slideshow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   How much soft edge applied to background image. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SoftEdgeDes {
            get {
                return ResourceManager.GetString("SoftEdgeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SoftEdge Width (X axis) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SoftEdgeX {
            get {
                return ResourceManager.GetString("SoftEdgeX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SoftEdge Width (Y axis) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SoftEdgeY {
            get {
                return ResourceManager.GetString("SoftEdgeY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sticky scroll background color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StickyScrollColorType {
            get {
                return ResourceManager.GetString("StickyScrollColorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If &quot;Is transparent to sticky scroll&quot; is true, ClaudiaIDE set this color value to sticky scroll background color. This value require HTML color code with alpha format. e.g. &quot;#B0A6ACAF&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StickyScrollColorTypeDes {
            get {
                return ResourceManager.GetString("StickyScrollColorTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image tile mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TileMode {
            get {
                return ResourceManager.GetString("TileMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies how an image fills the editor window. None: not repeated. Tile:  filled by repeating. FlipX: flipped horizontally. FlipY: flipped vertically. FlipXY: The combination of FlipX and FlipY. This property not affects background image of IDE. If this property other than None, should change to other than zero ViewPortWidth and ViewPortHeight properties. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string TileModeDes {
            get {
                return ResourceManager.GetString("TileModeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Update interval に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UpdateIntervalType {
            get {
                return ResourceManager.GetString("UpdateIntervalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Background image change interval. (value in format: HH:mm:ss) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UpdateIntervalTypeDes {
            get {
                return ResourceManager.GetString("UpdateIntervalTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Url に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Url {
            get {
                return ResourceManager.GetString("Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The Url pointing to the image to show に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UrlDescription {
            get {
                return ResourceManager.GetString("UrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color theme to use に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UseColorTheme {
            get {
                return ResourceManager.GetString("UseColorTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies a color theme. If Dark is selected, the contents specified in Dark Theme will be used. If UseSystemSetting is specified, the color scheme to be used is determined based on the OS color scheme theme. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UseColorThemeDescription {
            get {
                return ResourceManager.GetString("UseColorThemeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vertical Alignment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignmentType {
            get {
                return ResourceManager.GetString("VerticalAlignmentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image position in vertical. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VerticalAlignmentTypeDes {
            get {
                return ResourceManager.GetString("VerticalAlignmentTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image horizontal position in ViewBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewBoxPointX {
            get {
                return ResourceManager.GetString("ViewBoxPointX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This property can set a double value for the Image horizontal position in WPF ViewBox. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewBoxPointXDes {
            get {
                return ResourceManager.GetString("ViewBoxPointXDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image vertical position in ViewBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewBoxPointY {
            get {
                return ResourceManager.GetString("ViewBoxPointY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This property can set double value about Image vertical position in WPF ViewBox. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewBoxPointYDes {
            get {
                return ResourceManager.GetString("ViewBoxPointYDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base tile image relative height に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortHeight {
            get {
                return ResourceManager.GetString("ViewPortHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base tile image relative height in editor window. (value within the range of 0.00 &lt;= 1.00) This property not affects background image of IDE. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortHeightDes {
            get {
                return ResourceManager.GetString("ViewPortHeightDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base tile image horizontal position in ViewPort に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortPointX {
            get {
                return ResourceManager.GetString("ViewPortPointX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This property can set a double value for the base tile image horizontal position in WPF ViewPort. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortPointXDes {
            get {
                return ResourceManager.GetString("ViewPortPointXDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base tile image vertical position in ViewPort に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortPointY {
            get {
                return ResourceManager.GetString("ViewPortPointY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This property can set double value about base tile image vertical position in WPF ViewPort. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortPointYDes {
            get {
                return ResourceManager.GetString("ViewPortPointYDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base tile image relative width に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortWidth {
            get {
                return ResourceManager.GetString("ViewPortWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Base tile image relative width in editor window. (value within the range of 0.00 &lt;= 1.00) This property not affects background image of IDE. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ViewPortWidthDes {
            get {
                return ResourceManager.GetString("ViewPortWidthDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slideshot using Web API に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WebApi {
            get {
                return ResourceManager.GetString("WebApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Download Interval に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WebApiDownloadInterval {
            get {
                return ResourceManager.GetString("WebApiDownloadInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The time to wait until the next image get downloaded に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WebApiDownloadIntervalDescpription {
            get {
                return ResourceManager.GetString("WebApiDownloadIntervalDescpription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Web Image に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WebImage {
            get {
                return ResourceManager.GetString("WebImage", resourceCulture);
            }
        }
    }
}
